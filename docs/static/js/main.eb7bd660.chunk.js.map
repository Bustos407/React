{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GrifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GrifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oNAOaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAGQ,sBAAMC,SAdO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MASd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAtBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,WAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCtCrBC,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DAEXC,EAFW,iDAEsCC,UAAWH,GAFjD,+DAGAI,MAAMF,GAHN,cAGZG,EAHY,gBAIKA,EAAKC,OAJV,uBAIVC,EAJU,EAIVA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAE1B,MAAM,CAEFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAgBXM,GAhBW,4CAAD,sDCEPO,EAAe,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEhC,OADAc,QAAQC,IAAIL,EAAMV,GAEd,sBAAKgB,UAAU,8DAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCJHS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAGxB,ECJ0B,SAAEA,GAE9B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAyBA,OApBAC,qBAAW,WAEX1B,EAAQC,GACP0B,MAAK,SAAAhB,GAIEc,EAAS,CAELjB,KAAMG,EACNY,SAAQ,SAOjB,CAACtB,IAGGuB,EDvB0BI,CAAa3B,GAA/Ba,EAAb,EAAON,KAAae,EAApB,EAAoBA,QAMlB,OACK,qCAED,qBAAIJ,UAAY,0DAAhB,UAA4ElB,EAA5E,OAEGsB,GAAW,mBAAGJ,UAAY,oDAAf,qBAEd,qBAAKA,UAAU,YAAf,SAEWL,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEpBnBiB,EAAe,WAGxB,MAAoC9C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAKA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEIS,EAAWmB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjBvB6B,IAASC,OAEL,cAAE,EAAF,IACAC,SAASC,eAAe,W","file":"static/js/main.eb7bd660.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handelSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length>2) {\r\n            setCategories( categories => [inputValue,...categories])\r\n            setinputValue('')\r\n        }\r\n     \r\n// console.log('submit hecho');\r\n          \r\n    }\r\n    return (\r\n     \r\n\r\n            <form onSubmit = {handelSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n       \r\n    )\r\n}\r\nAddCategory.protoTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs=async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Vrdphz2OzdU7SeuXacZnbVcZ9JvfhWZQ`\r\n   const resp =await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img =>{\r\n\r\n      return{\r\n\r\n          id: img.id,\r\n          title: img.title,\r\n          url: img.images?.downsized_medium.url\r\n      }\r\n    })\r\n   return gifs\r\n   \r\n  }","import React from 'react'\r\n\r\n//mostrar los gifs en en la pag\r\n\r\nexport const GrifGridItem = ({title,url}) => {\r\n    console.log(title,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__backInLeft animate_delay-2s\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GrifGridItem } from './GrifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n  const {data :images,loading} = useFetchGifs(category);\r\n  \r\n    //Funcion para pasar datos y mostar los url de los gifs de giphy\r\n   \r\n\r\n    // getGifs();\r\n    return (\r\n         <>\r\n\r\n        <h3 className = ' animate__animated animate__backInLeft animate_delay-2s'>{ category } </h3>\r\n\r\n          {loading && <p className = 'animate__animated animate__flash animate_delay-2s'>loading</p>  }\r\n \r\n        <div className='card-grid'>\r\n               {\r\n                   images.map(img => \r\n                     <GrifGridItem\r\n                     key = {img.id}\r\n                     {...img } />\r\n                   )\r\n               }\r\n           \r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\nconst [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n});\r\n\r\nuseEffect( () => {\r\n\r\ngetGifs(category)\r\n.then(img =>{\r\n\r\n   \r\n\r\n        setstate({\r\n\r\n            data: img,\r\n            loading:false\r\n        });\r\n\r\n    \r\n    \r\n})\r\n\r\n}, [category] )\r\n\r\n\r\nreturn state;\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () =>{\r\n    //      setCategories([...categories,'Kakegurui'])\r\n    // }\r\n    return (\r\n        <div>\r\n            <h2>GifExpertAPP</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n\r\n            <ol> \r\n            {\r\n                categories.map(category =>(\r\n                  <GifGrid \r\n                  key={category}\r\n                  category={category}\r\n                  />\r\n                ))\r\n             }\r\n            \r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    < GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}